<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

   <beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <beans:property name="locations">
         <beans:list>
            <beans:value>classpath:properties/jdbc.properties</beans:value>
         </beans:list>
      </beans:property>
   </beans:bean>
  
   <!-- DBCP 설정 부분 / DBCP(Database Connection Pool) / DBMS(Database Management System) -->
   <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
      <beans:property name="driverClassName" value="${jdbc.driverClassName}" />
      <!-- 중간에 더 들어갈 부분이 없어서 / 로 끝내준다 -->
      
      <!-- value값 괄호안에는 빈칸이 들어가면 안된다. -->
      
      <beans:property name="url" value="${jdbc.url}" />
      
      <beans:property name="username" value="${jdbc.username}" />
      
      <beans:property name="password" value="${jdbc.password}" />
      
      <beans:property name="initialSize" value="${jdbc.initialSize}" />
      
      <beans:property name="maxActive" value="${jdbc.maxActive}" />
      
      <!-- minIdle의 value는 innitalSize와 같게 설정 -->
      <beans:property name="minIdle" value="${jdbc.initialSize}" />
      
      <beans:property name="maxWait" value="3000" />
      
      <beans:property name="poolPreparedStatements" value="true" />
      
      <beans:property name="maxOpenPreparedStatements" value="50" />
   </beans:bean> 
   
   
   <!-- DB 설정 (myBatis == iBatis(구버전) / framework 형식) -->
   <!-- <beans:bean> 와 <beans:beans> 는 다르므로 주의할 것!-->
   <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
      <beans:property name="dataSource" ref="dataSource" />
      
      <!-- sqls이 들어가있는 곳을 가려켜주는 부분 -->
      <beans:property name="mapperLocations" value="classpath:sqls/*.xml" />
   </beans:bean>
   
   
   <!--  이 부분은 mybatis에서 session을 취득한 부분 해당-->
   <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
      <!-- ref 참조하는 것은 위에 설정한 sqlSessionFactory이다. -->
      <beans:constructor-arg index="0" ref="sqlSessionFactory" />
      
      <!-- BATCH는 순차적으로 나아가라 라는 의미이다. -->
      <beans:constructor-arg index="1" value="BATCH"/>
   </beans:bean>
   
   
   <!-- JDBC와 함께 myBatis를 연동시켜주는 부분(myBatis를 사용하겠다고 선언하는 부분) -->
   <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <beans:property name="dataSource" ref="dataSource" />
   </beans:bean>
</beans:beans>

